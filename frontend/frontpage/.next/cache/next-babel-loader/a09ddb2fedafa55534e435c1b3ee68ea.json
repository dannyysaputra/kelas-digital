{"ast":null,"code":"var _jsxFileName = \"E:\\\\microservice-bwa\\\\Kelas-digital\\\\frontend\\\\frontpage\\\\pages\\\\random\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Link from 'next/link';\nimport Head from 'next/head';\nexport default function Todo({\n  data\n}) {\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 17\n    }\n  }, data.title)), __jsx(\"main\", {\n    className: \"container mt-12 mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    className: \"text-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, \"detail todo\")));\n}\nTodo.getInitialProps = async props => {\n  const {\n    id\n  } = props.query;\n  try {\n    const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`).then(response => response.json()).then(json => json);\n    return {\n      data\n    };\n  } catch (error) {}\n};","map":{"version":3,"names":["React","Link","Head","Todo","data","__jsx","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","title","className","getInitialProps","props","id","query","fetch","then","response","json","error"],"sources":["E:/microservice-bwa/Kelas-digital/frontend/frontpage/pages/random/[id].js"],"sourcesContent":["import React from 'react'\r\nimport Link from 'next/link'\r\nimport Head from 'next/head'\r\n\r\nexport default function Todo({ data }) {\r\n    return (\r\n        <>\r\n            <Head>\r\n                <title>{data.title}</title>\r\n            </Head>\r\n\r\n            <main className='container mt-12 mx-auto'>\r\n                <h1 className='text-3xl'>detail todo</h1>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nTodo.getInitialProps = async (props) => {\r\n    const {id} = props.query\r\n\r\n    try {\r\n        const data = await fetch(`https://jsonplaceholder.typicode.com/todos/${id}`)\r\n        .then(response => response.json())\r\n        .then(json => json);\r\n\r\n        return { data };\r\n    } catch (error) {\r\n        \r\n    }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,WAAW;AAC5B,OAAOC,IAAI,MAAM,WAAW;AAE5B,eAAe,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EACnC,OACIC,KAAA,CAAAL,KAAA,CAAAM,QAAA,QACID,KAAA,CAACH,IAAI;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACDP,KAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAQR,IAAI,CAACS,KAAa,CACxB,CAAC,EAEPR,KAAA;IAAMS,SAAS,EAAC,yBAAyB;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrCP,KAAA;IAAIS,SAAS,EAAC,UAAU;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAgB,CACtC,CACR,CAAC;AAEX;AAEAT,IAAI,CAACY,eAAe,GAAG,MAAOC,KAAK,IAAK;EACpC,MAAM;IAACC;EAAE,CAAC,GAAGD,KAAK,CAACE,KAAK;EAExB,IAAI;IACA,MAAMd,IAAI,GAAG,MAAMe,KAAK,CAAE,8CAA6CF,EAAG,EAAC,CAAC,CAC3EG,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAAC;IAEnB,OAAO;MAAElB;IAAK,CAAC;EACnB,CAAC,CAAC,OAAOmB,KAAK,EAAE,CAEhB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}